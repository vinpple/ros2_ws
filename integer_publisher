#include "rclcpp/rclcpp.hpp"
#include "std_msgs/msg/int32.hpp"  // Int32 메시지 타입을 포함
#include <memory>
#include <chrono>

int main(int argc, char * argv[])
{
    rclcpp::init(argc, argv);
    auto node = std::make_shared<rclcpp::Node>("node_pub1");
    auto qos_profile = rclcpp::QoS(rclcpp::KeepLast(10));
    auto mypub = node->create_publisher<std_msgs::msg::Int32>("topic_pub1", qos_profile);

    // 메시지 초기화
    std_msgs::msg::Int32 message;
    message.data = 0;  // 메시지 초기값을 0으로 설정

    rclcpp::WallRate loop_rate(1.0);  // 1초 마다 반복
    
    while (rclcpp::ok())
    {
        // 메시지 출력
        RCLCPP_INFO(node->get_logger(), "Publish: %d", message.data);

        // 메시지 퍼블리시
        mypub->publish(message);

        // 메시지 값 1씩 증가
        message.data++;

        loop_rate.sleep();  // 반복주파수에 맞게 sleep
    }

    rclcpp::shutdown();
    return 0;
}
